/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/detect-collisions/source/index.js":
/*!********************************************************!*\
  !*** ./node_modules/detect-collisions/source/index.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { BVH, Circle, Polygon, Point, Result, SAT } = __webpack_require__(/*! ./modules */ \"./node_modules/detect-collisions/source/modules/index.js\");\n\n/**\n * A collision system used to track bodies in order to improve collision detection performance\n * @class\n */\nclass Collisions {\n  /**\n   * @constructor\n   */\n  constructor() {\n    /** @private */\n    this._bvh = new BVH();\n  }\n\n  /**\n   * Creates a {@link Circle} and inserts it into the collision system\n   * @param {Number} [x = 0] The starting X coordinate\n   * @param {Number} [y = 0] The starting Y coordinate\n   * @param {Number} [radius = 0] The radius\n   * @param {Number} [scale = 1] The scale\n   * @param {Number} [padding = 0] The amount to pad the bounding volume when testing for potential collisions\n   * @returns {Circle}\n   */\n  createCircle(x = 0, y = 0, radius = 0, scale = 1, padding = 0) {\n    const body = new Circle(x, y, radius, scale, padding);\n\n    this._bvh.insert(body);\n\n    return body;\n  }\n\n  /**\n   * Creates a {@link Polygon} and inserts it into the collision system\n   * @param {Number} [x = 0] The starting X coordinate\n   * @param {Number} [y = 0] The starting Y coordinate\n   * @param {Array<Number[]>} [points = []] An array of coordinate pairs making up the polygon - [[x1, y1], [x2, y2], ...]\n   * @param {Number} [angle = 0] The starting rotation in radians\n   * @param {Number} [scale_x = 1] The starting scale along the X axis\n   * @param {Number} [scale_y = 1] The starting scale long the Y axis\n   * @param {Number} [padding = 0] The amount to pad the bounding volume when testing for potential collisions\n   * @returns {Polygon}\n   */\n  createPolygon(\n    x = 0,\n    y = 0,\n    points = [[0, 0]],\n    angle = 0,\n    scale_x = 1,\n    scale_y = 1,\n    padding = 0\n  ) {\n    const body = new Polygon(x, y, points, angle, scale_x, scale_y, padding);\n\n    this._bvh.insert(body);\n\n    return body;\n  }\n\n  /**\n   * Creates a {@link Point} and inserts it into the collision system\n   * @param {Number} [x = 0] The starting X coordinate\n   * @param {Number} [y = 0] The starting Y coordinate\n   * @param {Number} [padding = 0] The amount to pad the bounding volume when testing for potential collisions\n   * @returns {Point}\n   */\n  createPoint(x = 0, y = 0, padding = 0) {\n    const body = new Point(x, y, padding);\n\n    this._bvh.insert(body);\n\n    return body;\n  }\n\n  /**\n   * Creates a {@link Result} used to collect the detailed results of a collision test\n   */\n  createResult() {\n    return new Result();\n  }\n\n  /**\n   * Creates a Result used to collect the detailed results of a collision test\n   */\n  static createResult() {\n    return new Result();\n  }\n\n  /**\n   * Inserts bodies into the collision system\n   * @param {...Circle|...Polygon|...Point} bodies\n   */\n  insert(...bodies) {\n    for (const body of bodies) {\n      this._bvh.insert(body, false);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes bodies = require(the collision system\n   * @param {...Circle|...Polygon|...Point} bodies\n   */\n  remove(...bodies) {\n    for (const body of bodies) {\n      this._bvh.remove(body, false);\n    }\n\n    return this;\n  }\n\n  /**\n   * Updates the collision system. This should be called before any collisions are tested.\n   */\n  update() {\n    this._bvh.update();\n\n    return this;\n  }\n\n  /**\n   * Draws the bodies within the system to a CanvasRenderingContext2D's current path\n   * @param {CanvasRenderingContext2D} context The context to draw to\n   */\n  draw(context) {\n    return this._bvh.draw(context);\n  }\n\n  /**\n   * Draws the system's BVH to a CanvasRenderingContext2D's current path. This is useful for testing out different padding values for bodies.\n   * @param {CanvasRenderingContext2D} context The context to draw to\n   */\n  drawBVH(context) {\n    return this._bvh.drawBVH(context);\n  }\n\n  /**\n   * Returns a list of potential collisions for a body\n   * @param {Circle|Polygon|Point} body The body to test for potential collisions against\n   * @returns {Array<Body>}\n   */\n  potentials(body) {\n    return this._bvh.potentials(body);\n  }\n\n  /**\n   * Determines if two bodies are colliding\n   * @param {Circle|Polygon|Point} target The target body to test against\n   * @param {Result} [result = null] A Result object on which to store information about the collision\n   * @param {Boolean} [aabb = true] Set to false to skip the AABB test (useful if you use your own potential collision heuristic)\n   * @returns {Boolean}\n   */\n  collides(source, target, result = null, aabb = true) {\n    return SAT(source, target, result, aabb);\n  }\n}\n\nmodule.exports = {\n  Collisions,\n  BVH,\n  Circle,\n  Polygon,\n  Point,\n  Result,\n  SAT,\n};\n\n\n//# sourceURL=webpack:///./node_modules/detect-collisions/source/index.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/source/modules/BVH.js":
/*!**************************************************************!*\
  !*** ./node_modules/detect-collisions/source/modules/BVH.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const BVHBranch = __webpack_require__(/*! ./BVHBranch */ \"./node_modules/detect-collisions/source/modules/BVHBranch.js\");\n\n/**\n * A Bounding Volume Hierarchy (BVH) used to find potential collisions quickly\n * @class\n * @private\n */\nclass BVH {\n  /**\n   * @constructor\n   */\n  constructor() {\n    /** @private */\n    this._hierarchy = null;\n\n    /** @private */\n    this._bodies = [];\n\n    /** @private */\n    this._dirty_branches = [];\n  }\n\n  /**\n   * Inserts a body into the BVH\n   * @param {Circle|Polygon|Point} body The body to insert\n   * @param {Boolean} [updating = false] Set to true if the body already exists in the BVH (used internally when updating the body's position)\n   */\n  insert(body, updating = false) {\n    if (!updating) {\n      const bvh = body._bvh;\n\n      if (bvh && bvh !== this) {\n        throw new Error(\"Body belongs to another collision system\");\n      }\n\n      body._bvh = this;\n      this._bodies.push(body);\n    }\n\n    const polygon = body._polygon;\n    const body_x = body.x;\n    const body_y = body.y;\n\n    if (polygon) {\n      if (\n        body._dirty_coords ||\n        body.x !== body._x ||\n        body.y !== body._y ||\n        body.angle !== body._angle ||\n        body.scale_x !== body._scale_x ||\n        body.scale_y !== body._scale_y\n      ) {\n        body._calculateCoords();\n      }\n    }\n\n    const padding = body._bvh_padding;\n    const radius = polygon ? 0 : body.radius * body.scale;\n    const body_min_x = (polygon ? body._min_x : body_x - radius) - padding;\n    const body_min_y = (polygon ? body._min_y : body_y - radius) - padding;\n    const body_max_x = (polygon ? body._max_x : body_x + radius) + padding;\n    const body_max_y = (polygon ? body._max_y : body_y + radius) + padding;\n\n    body._bvh_min_x = body_min_x;\n    body._bvh_min_y = body_min_y;\n    body._bvh_max_x = body_max_x;\n    body._bvh_max_y = body_max_y;\n\n    let current = this._hierarchy;\n    let sort = 0;\n\n    if (!current) {\n      this._hierarchy = body;\n    } else {\n      while (true) {\n        // Branch\n        if (current._bvh_branch) {\n          const left = current._bvh_left;\n          const left_min_y = left._bvh_min_y;\n          const left_max_x = left._bvh_max_x;\n          const left_max_y = left._bvh_max_y;\n          const left_new_min_x =\n            body_min_x < left._bvh_min_x ? body_min_x : left._bvh_min_x;\n          const left_new_min_y =\n            body_min_y < left_min_y ? body_min_y : left_min_y;\n          const left_new_max_x =\n            body_max_x > left_max_x ? body_max_x : left_max_x;\n          const left_new_max_y =\n            body_max_y > left_max_y ? body_max_y : left_max_y;\n          const left_volume =\n            (left_max_x - left._bvh_min_x) * (left_max_y - left_min_y);\n          const left_new_volume =\n            (left_new_max_x - left_new_min_x) *\n            (left_new_max_y - left_new_min_y);\n          const left_difference = left_new_volume - left_volume;\n\n          const right = current._bvh_right;\n          const right_min_x = right._bvh_min_x;\n          const right_min_y = right._bvh_min_y;\n          const right_max_x = right._bvh_max_x;\n          const right_max_y = right._bvh_max_y;\n          const right_new_min_x =\n            body_min_x < right_min_x ? body_min_x : right_min_x;\n          const right_new_min_y =\n            body_min_y < right_min_y ? body_min_y : right_min_y;\n          const right_new_max_x =\n            body_max_x > right_max_x ? body_max_x : right_max_x;\n          const right_new_max_y =\n            body_max_y > right_max_y ? body_max_y : right_max_y;\n          const right_volume =\n            (right_max_x - right_min_x) * (right_max_y - right_min_y);\n          const right_new_volume =\n            (right_new_max_x - right_new_min_x) *\n            (right_new_max_y - right_new_min_y);\n          const right_difference = right_new_volume - right_volume;\n\n          current._bvh_sort = sort++;\n          current._bvh_min_x =\n            left_new_min_x < right_new_min_x ? left_new_min_x : right_new_min_x;\n          current._bvh_min_y =\n            left_new_min_y < right_new_min_y ? left_new_min_y : right_new_min_y;\n          current._bvh_max_x =\n            left_new_max_x > right_new_max_x ? left_new_max_x : right_new_max_x;\n          current._bvh_max_y =\n            left_new_max_y > right_new_max_y ? left_new_max_y : right_new_max_y;\n\n          current = left_difference <= right_difference ? left : right;\n        } else {\n          // Leaf\n          const grandparent = current._bvh_parent;\n          const parent_min_x = current._bvh_min_x;\n          const parent_min_y = current._bvh_min_y;\n          const parent_max_x = current._bvh_max_x;\n          const parent_max_y = current._bvh_max_y;\n          const new_parent =\n            (current._bvh_parent =\n            body._bvh_parent =\n              BVHBranch.getBranch());\n\n          new_parent._bvh_parent = grandparent;\n          new_parent._bvh_left = current;\n          new_parent._bvh_right = body;\n          new_parent._bvh_sort = sort++;\n          new_parent._bvh_min_x =\n            body_min_x < parent_min_x ? body_min_x : parent_min_x;\n          new_parent._bvh_min_y =\n            body_min_y < parent_min_y ? body_min_y : parent_min_y;\n          new_parent._bvh_max_x =\n            body_max_x > parent_max_x ? body_max_x : parent_max_x;\n          new_parent._bvh_max_y =\n            body_max_y > parent_max_y ? body_max_y : parent_max_y;\n\n          if (!grandparent) {\n            this._hierarchy = new_parent;\n          } else if (grandparent._bvh_left === current) {\n            grandparent._bvh_left = new_parent;\n          } else {\n            grandparent._bvh_right = new_parent;\n          }\n\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Removes a body from the BVH\n   * @param {Circle|Polygon|Point} body The body to remove\n   * @param {Boolean} [updating = false] Set to true if this is a temporary removal (used internally when updating the body's position)\n   */\n  remove(body, updating = false) {\n    if (!updating) {\n      const bvh = body._bvh;\n\n      if (bvh && bvh !== this) {\n        throw new Error(\"Body belongs to another collision system\");\n      }\n\n      body._bvh = null;\n      this._bodies.splice(this._bodies.indexOf(body), 1);\n    }\n\n    if (this._hierarchy === body) {\n      this._hierarchy = null;\n\n      return;\n    }\n\n    const parent = body._bvh_parent;\n    const grandparent = parent._bvh_parent;\n    const parent_left = parent._bvh_left;\n    const sibling = parent_left === body ? parent._bvh_right : parent_left;\n\n    sibling._bvh_parent = grandparent;\n\n    if (sibling._bvh_branch) {\n      sibling._bvh_sort = parent._bvh_sort;\n    }\n\n    if (grandparent) {\n      if (grandparent._bvh_left === parent) {\n        grandparent._bvh_left = sibling;\n      } else {\n        grandparent._bvh_right = sibling;\n      }\n\n      let branch = grandparent;\n\n      while (branch) {\n        const left = branch._bvh_left;\n        const left_min_x = left._bvh_min_x;\n        const left_min_y = left._bvh_min_y;\n        const left_max_x = left._bvh_max_x;\n        const left_max_y = left._bvh_max_y;\n\n        const right = branch._bvh_right;\n        const right_min_x = right._bvh_min_x;\n        const right_min_y = right._bvh_min_y;\n        const right_max_x = right._bvh_max_x;\n        const right_max_y = right._bvh_max_y;\n\n        branch._bvh_min_x = left_min_x < right_min_x ? left_min_x : right_min_x;\n        branch._bvh_min_y = left_min_y < right_min_y ? left_min_y : right_min_y;\n        branch._bvh_max_x = left_max_x > right_max_x ? left_max_x : right_max_x;\n        branch._bvh_max_y = left_max_y > right_max_y ? left_max_y : right_max_y;\n\n        branch = branch._bvh_parent;\n      }\n    } else {\n      this._hierarchy = sibling;\n    }\n\n    BVHBranch.releaseBranch(parent);\n  }\n\n  /**\n   * Updates the BVH. Moved bodies are removed/inserted.\n   */\n  update() {\n    const bodies = this._bodies;\n    const count = bodies.length;\n\n    for (let i = 0; i < count; ++i) {\n      const body = bodies[i];\n\n      let update = false;\n\n      if (!update && body.padding !== body._bvh_padding) {\n        body._bvh_padding = body.padding;\n        update = true;\n      }\n\n      if (!update) {\n        const polygon = body._polygon;\n\n        if (polygon) {\n          if (\n            body._dirty_coords ||\n            body.x !== body._x ||\n            body.y !== body._y ||\n            body.angle !== body._angle ||\n            body.scale_x !== body._scale_x ||\n            body.scale_y !== body._scale_y\n          ) {\n            body._calculateCoords();\n          }\n        }\n\n        const x = body.x;\n        const y = body.y;\n        const radius = polygon ? 0 : body.radius * body.scale;\n        const min_x = polygon ? body._min_x : x - radius;\n        const min_y = polygon ? body._min_y : y - radius;\n        const max_x = polygon ? body._max_x : x + radius;\n        const max_y = polygon ? body._max_y : y + radius;\n\n        update =\n          min_x < body._bvh_min_x ||\n          min_y < body._bvh_min_y ||\n          max_x > body._bvh_max_x ||\n          max_y > body._bvh_max_y;\n      }\n\n      if (update) {\n        this.remove(body, true);\n        this.insert(body, true);\n      }\n    }\n  }\n\n  /**\n   * Returns a list of potential collisions for a body\n   * @param {Circle|Polygon|Point} body The body to test\n   * @returns {Array<Body>}\n   */\n  potentials(body) {\n    const results = [];\n    const min_x = body._bvh_min_x;\n    const min_y = body._bvh_min_y;\n    const max_x = body._bvh_max_x;\n    const max_y = body._bvh_max_y;\n\n    let current = this._hierarchy;\n    let traverse_left = true;\n\n    if (!current || !current._bvh_branch) {\n      return results;\n    }\n\n    while (current) {\n      if (traverse_left) {\n        traverse_left = false;\n\n        let left = current._bvh_branch ? current._bvh_left : null;\n\n        while (\n          left &&\n          left._bvh_max_x >= min_x &&\n          left._bvh_max_y >= min_y &&\n          left._bvh_min_x <= max_x &&\n          left._bvh_min_y <= max_y\n        ) {\n          current = left;\n          left = current._bvh_branch ? current._bvh_left : null;\n        }\n      }\n\n      const branch = current._bvh_branch;\n      const right = branch ? current._bvh_right : null;\n\n      if (\n        right &&\n        right._bvh_max_x > min_x &&\n        right._bvh_max_y > min_y &&\n        right._bvh_min_x < max_x &&\n        right._bvh_min_y < max_y\n      ) {\n        current = right;\n        traverse_left = true;\n      } else {\n        if (!branch && current !== body) {\n          results.push(current);\n        }\n\n        let parent = current._bvh_parent;\n\n        if (parent) {\n          while (parent && parent._bvh_right === current) {\n            current = parent;\n            parent = current._bvh_parent;\n          }\n\n          current = parent;\n        } else {\n          break;\n        }\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Draws the bodies within the BVH to a CanvasRenderingContext2D's current path\n   * @param {CanvasRenderingContext2D} context The context to draw to\n   */\n  draw(context) {\n    const bodies = this._bodies;\n    const count = bodies.length;\n\n    for (let i = 0; i < count; ++i) {\n      bodies[i].draw(context);\n    }\n  }\n\n  /**\n   * Draws the BVH to a CanvasRenderingContext2D's current path. This is useful for testing out different padding values for bodies.\n   * @param {CanvasRenderingContext2D} context The context to draw to\n   */\n  drawBVH(context) {\n    let current = this._hierarchy;\n    let traverse_left = true;\n\n    while (current) {\n      if (traverse_left) {\n        traverse_left = false;\n\n        let left = current._bvh_branch ? current._bvh_left : null;\n\n        while (left) {\n          current = left;\n          left = current._bvh_branch ? current._bvh_left : null;\n        }\n      }\n\n      const branch = current._bvh_branch;\n      const min_x = current._bvh_min_x;\n      const min_y = current._bvh_min_y;\n      const max_x = current._bvh_max_x;\n      const max_y = current._bvh_max_y;\n      const right = branch ? current._bvh_right : null;\n\n      context.moveTo(min_x, min_y);\n      context.lineTo(max_x, min_y);\n      context.lineTo(max_x, max_y);\n      context.lineTo(min_x, max_y);\n      context.lineTo(min_x, min_y);\n\n      if (right) {\n        current = right;\n        traverse_left = true;\n      } else {\n        let parent = current._bvh_parent;\n\n        if (parent) {\n          while (parent && parent._bvh_right === current) {\n            current = parent;\n            parent = current._bvh_parent;\n          }\n\n          current = parent;\n        } else {\n          break;\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = BVH;\n\nmodule.exports.default = module.exports;\n\n\n//# sourceURL=webpack:///./node_modules/detect-collisions/source/modules/BVH.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/source/modules/BVHBranch.js":
/*!********************************************************************!*\
  !*** ./node_modules/detect-collisions/source/modules/BVHBranch.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("/**\n * @private\n */\nconst branch_pool = [];\n\n/**\n * A branch within a BVH\n * @class\n * @private\n */\nclass BVHBranch {\n  /**\n   * @constructor\n   */\n  constructor() {\n    /** @private */\n    this._bvh_parent = null;\n\n    /** @private */\n    this._bvh_branch = true;\n\n    /** @private */\n    this._bvh_left = null;\n\n    /** @private */\n    this._bvh_right = null;\n\n    /** @private */\n    this._bvh_sort = 0;\n\n    /** @private */\n    this._bvh_min_x = 0;\n\n    /** @private */\n    this._bvh_min_y = 0;\n\n    /** @private */\n    this._bvh_max_x = 0;\n\n    /** @private */\n    this._bvh_max_y = 0;\n  }\n\n  /**\n   * Returns a branch from the branch pool or creates a new branch\n   * @returns {BVHBranch}\n   */\n  static getBranch() {\n    if (branch_pool.length) {\n      return branch_pool.pop();\n    }\n\n    return new BVHBranch();\n  }\n\n  /**\n   * Releases a branch back into the branch pool\n   * @param {BVHBranch} branch The branch to release\n   */\n  static releaseBranch(branch) {\n    branch_pool.push(branch);\n  }\n\n  /**\n   * Sorting callback used to sort branches by deepest first\n   * @param {BVHBranch} a The first branch\n   * @param {BVHBranch} b The second branch\n   * @returns {Number}\n   */\n  static sortBranches(a, b) {\n    return a.sort > b.sort ? -1 : 1;\n  }\n}\n\nmodule.exports = BVHBranch;\n\nmodule.exports.default = module.exports;\n\n\n//# sourceURL=webpack:///./node_modules/detect-collisions/source/modules/BVHBranch.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/source/modules/Body.js":
/*!***************************************************************!*\
  !*** ./node_modules/detect-collisions/source/modules/Body.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Result = __webpack_require__(/*! ./Result */ \"./node_modules/detect-collisions/source/modules/Result.js\");\nconst SAT = __webpack_require__(/*! ./SAT */ \"./node_modules/detect-collisions/source/modules/SAT.js\");\n\n/**\n * The base class for bodies used to detect collisions\n * @class\n * @protected\n */\nclass Body {\n  /**\n   * @constructor\n   * @param {Number} [x = 0] The starting X coordinate\n   * @param {Number} [y = 0] The starting Y coordinate\n   * @param {Number} [padding = 0] The amount to pad the bounding volume when testing for potential collisions\n   */\n  constructor(x = 0, y = 0, padding = 0) {\n    /**\n     * @desc The X coordinate of the body\n     * @type {Number}\n     */\n    this.x = x;\n\n    /**\n     * @desc The Y coordinate of the body\n     * @type {Number}\n     */\n    this.y = y;\n\n    /**\n     * @desc The amount to pad the bounding volume when testing for potential collisions\n     * @type {Number}\n     */\n    this.padding = padding;\n\n    /** @private */\n    this._circle = false;\n\n    /** @private */\n    this._polygon = false;\n\n    /** @private */\n    this._point = false;\n\n    /** @private */\n    this._bvh = null;\n\n    /** @private */\n    this._bvh_parent = null;\n\n    /** @private */\n    this._bvh_branch = false;\n\n    /** @private */\n    this._bvh_padding = padding;\n\n    /** @private */\n    this._bvh_min_x = 0;\n\n    /** @private */\n    this._bvh_min_y = 0;\n\n    /** @private */\n    this._bvh_max_x = 0;\n\n    /** @private */\n    this._bvh_max_y = 0;\n  }\n\n  /**\n   * Determines if the body is colliding with another body\n   * @param {Circle|Polygon|Point} target The target body to test against\n   * @param {Result} [result = null] A Result object on which to store information about the collision\n   * @param {Boolean} [aabb = true] Set to false to skip the AABB test (useful if you use your own potential collision heuristic)\n   * @returns {Boolean}\n   */\n  collides(target, result = null, aabb = true) {\n    return SAT(this, target, result, aabb);\n  }\n\n  /**\n   * Returns a list of potential collisions\n   * @returns {Array<Body>}\n   */\n  potentials() {\n    const bvh = this._bvh;\n\n    if (bvh === null) {\n      throw new Error(\"Body does not belong to a collision system\");\n    }\n\n    return bvh.potentials(this);\n  }\n\n  /**\n   * Removes the body from its current collision system\n   */\n  remove() {\n    const bvh = this._bvh;\n\n    if (bvh) {\n      bvh.remove(this, false);\n    }\n  }\n\n  /**\n   * Creates a {@link Result} used to collect the detailed results of a collision test\n   */\n  createResult() {\n    return new Result();\n  }\n\n  /**\n   * Creates a Result used to collect the detailed results of a collision test\n   */\n  static createResult() {\n    return new Result();\n  }\n}\n\nmodule.exports = Body;\n\nmodule.exports.default = module.exports;\n\n\n//# sourceURL=webpack:///./node_modules/detect-collisions/source/modules/Body.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/source/modules/Circle.js":
/*!*****************************************************************!*\
  !*** ./node_modules/detect-collisions/source/modules/Circle.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Body = __webpack_require__(/*! ./Body */ \"./node_modules/detect-collisions/source/modules/Body.js\");\n\n/**\n * A circle used to detect collisions\n * @class\n */\nclass Circle extends Body {\n  /**\n   * @constructor\n   * @param {Number} [x = 0] The starting X coordinate\n   * @param {Number} [y = 0] The starting Y coordinate\n   * @param {Number} [radius = 0] The radius\n   * @param {Number} [scale = 1] The scale\n   * @param {Number} [padding = 0] The amount to pad the bounding volume when testing for potential collisions\n   */\n  constructor(x = 0, y = 0, radius = 0, scale = 1, padding = 0) {\n    super(x, y, padding);\n\n    /**\n     * @type {Number}\n     */\n    this.radius = radius;\n\n    /**\n     * @type {Number}\n     */\n    this.scale = scale;\n  }\n\n  /**\n   * Draws the circle to a CanvasRenderingContext2D's current path\n   * @param {CanvasRenderingContext2D} context The context to add the arc to\n   */\n  draw(context) {\n    const x = this.x;\n    const y = this.y;\n    const radius = this.radius * this.scale;\n\n    context.moveTo(x + radius, y);\n    context.arc(x, y, radius, 0, Math.PI * 2);\n  }\n}\n\nmodule.exports = Circle;\n\nmodule.exports.default = module.exports;\n\n\n//# sourceURL=webpack:///./node_modules/detect-collisions/source/modules/Circle.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/source/modules/Point.js":
/*!****************************************************************!*\
  !*** ./node_modules/detect-collisions/source/modules/Point.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Polygon = __webpack_require__(/*! ./Polygon */ \"./node_modules/detect-collisions/source/modules/Polygon.js\");\n\n/**\n * A point used to detect collisions\n * @class\n */\nclass Point extends Polygon {\n  /**\n   * @constructor\n   * @param {Number} [x = 0] The starting X coordinate\n   * @param {Number} [y = 0] The starting Y coordinate\n   * @param {Number} [padding = 0] The amount to pad the bounding volume when testing for potential collisions\n   */\n  constructor(x = 0, y = 0, padding = 0) {\n    super(x, y, [[0, 0]], 0, 1, 1, padding);\n\n    /** @private */\n    this._point = true;\n  }\n}\n\nPoint.prototype.setPoints = undefined;\n\nmodule.exports = Point;\n\nmodule.exports.default = module.exports;\n\n\n//# sourceURL=webpack:///./node_modules/detect-collisions/source/modules/Point.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/source/modules/Polygon.js":
/*!******************************************************************!*\
  !*** ./node_modules/detect-collisions/source/modules/Polygon.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Body = __webpack_require__(/*! ./Body */ \"./node_modules/detect-collisions/source/modules/Body.js\");\n\n/**\n * A polygon used to detect collisions\n * @class\n */\nclass Polygon extends Body {\n  /**\n   * @constructor\n   * @param {Number} [x = 0] The starting X coordinate\n   * @param {Number} [y = 0] The starting Y coordinate\n   * @param {Array<Number[]>} [points = []] An array of coordinate pairs making up the polygon - [[x1, y1], [x2, y2], ...]\n   * @param {Number} [angle = 0] The starting rotation in radians\n   * @param {Number} [scale_x = 1] The starting scale along the X axis\n   * @param {Number} [scale_y = 1] The starting scale long the Y axis\n   * @param {Number} [padding = 0] The amount to pad the bounding volume when testing for potential collisions\n   */\n  constructor(\n    x = 0,\n    y = 0,\n    points = [],\n    angle = 0,\n    scale_x = 1,\n    scale_y = 1,\n    padding = 0\n  ) {\n    super(x, y, padding);\n\n    /**\n     * @desc The angle of the body in radians\n     * @type {Number}\n     */\n    this.angle = angle;\n\n    /**\n     * @desc The scale of the body along the X axis\n     * @type {Number}\n     */\n    this.scale_x = scale_x;\n\n    /**\n     * @desc The scale of the body along the Y axis\n     * @type {Number}\n     */\n    this.scale_y = scale_y;\n\n    /** @private */\n    this._polygon = true;\n\n    /** @private */\n    this._x = x;\n\n    /** @private */\n    this._y = y;\n\n    /** @private */\n    this._angle = angle;\n\n    /** @private */\n    this._scale_x = scale_x;\n\n    /** @private */\n    this._scale_y = scale_y;\n\n    /** @private */\n    this._min_x = 0;\n\n    /** @private */\n    this._min_y = 0;\n\n    /** @private */\n    this._max_x = 0;\n\n    /** @private */\n    this._max_y = 0;\n\n    /** @private */\n    this._points = null;\n\n    /** @private */\n    this._coords = null;\n\n    /** @private */\n    this._edges = null;\n\n    /** @private */\n    this._normals = null;\n\n    /** @private */\n    this._dirty_coords = true;\n\n    /** @private */\n    this._dirty_normals = true;\n\n    Polygon.prototype.setPoints.call(this, points);\n  }\n\n  /**\n   * Draws the polygon to a CanvasRenderingContext2D's current path\n   * @param {CanvasRenderingContext2D} context The context to add the shape to\n   */\n  draw(context) {\n    if (\n      this._dirty_coords ||\n      this.x !== this._x ||\n      this.y !== this._y ||\n      this.angle !== this._angle ||\n      this.scale_x !== this._scale_x ||\n      this.scale_y !== this._scale_y\n    ) {\n      this._calculateCoords();\n    }\n\n    const coords = this._coords;\n\n    if (coords.length === 2) {\n      context.moveTo(coords[0], coords[1]);\n      context.arc(coords[0], coords[1], 1, 0, Math.PI * 2);\n    } else {\n      context.moveTo(coords[0], coords[1]);\n\n      for (let i = 2; i < coords.length; i += 2) {\n        context.lineTo(coords[i], coords[i + 1]);\n      }\n\n      if (coords.length > 4) {\n        context.lineTo(coords[0], coords[1]);\n      }\n    }\n  }\n\n  /**\n   * Sets the points making up the polygon. It's important to use this function when changing the polygon's shape to ensure internal data is also updated.\n   * @param {Array<Number[]>} new_points An array of coordinate pairs making up the polygon - [[x1, y1], [x2, y2], ...]\n   */\n  setPoints(new_points) {\n    const count = new_points.length;\n\n    this._points = new Float64Array(count * 2);\n    this._coords = new Float64Array(count * 2);\n    this._edges = new Float64Array(count * 2);\n    this._normals = new Float64Array(count * 2);\n\n    const points = this._points;\n\n    for (let i = 0, ix = 0, iy = 1; i < count; ++i, ix += 2, iy += 2) {\n      const new_point = new_points[i];\n\n      points[ix] = new_point[0];\n      points[iy] = new_point[1];\n    }\n\n    this._dirty_coords = true;\n  }\n\n  /**\n   * Calculates and caches the polygon's world coordinates based on its points, angle, and scale\n   */\n  _calculateCoords() {\n    const x = this.x;\n    const y = this.y;\n    const angle = this.angle;\n    const scale_x = this.scale_x;\n    const scale_y = this.scale_y;\n    const points = this._points;\n    const coords = this._coords;\n    const count = points.length;\n\n    let min_x;\n    let max_x;\n    let min_y;\n    let max_y;\n\n    for (let ix = 0, iy = 1; ix < count; ix += 2, iy += 2) {\n      let coord_x = points[ix] * scale_x;\n      let coord_y = points[iy] * scale_y;\n\n      if (angle) {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n        const tmp_x = coord_x;\n        const tmp_y = coord_y;\n\n        coord_x = tmp_x * cos - tmp_y * sin;\n        coord_y = tmp_x * sin + tmp_y * cos;\n      }\n\n      coord_x += x;\n      coord_y += y;\n\n      coords[ix] = coord_x;\n      coords[iy] = coord_y;\n\n      if (ix === 0) {\n        min_x = max_x = coord_x;\n        min_y = max_y = coord_y;\n      } else {\n        if (coord_x < min_x) {\n          min_x = coord_x;\n        } else if (coord_x > max_x) {\n          max_x = coord_x;\n        }\n\n        if (coord_y < min_y) {\n          min_y = coord_y;\n        } else if (coord_y > max_y) {\n          max_y = coord_y;\n        }\n      }\n    }\n\n    this._x = x;\n    this._y = y;\n    this._angle = angle;\n    this._scale_x = scale_x;\n    this._scale_y = scale_y;\n    this._min_x = min_x;\n    this._min_y = min_y;\n    this._max_x = max_x;\n    this._max_y = max_y;\n    this._dirty_coords = false;\n    this._dirty_normals = true;\n  }\n\n  /**\n   * Calculates the normals and edges of the polygon's sides\n   */\n  _calculateNormals() {\n    const coords = this._coords;\n    const edges = this._edges;\n    const normals = this._normals;\n    const count = coords.length;\n\n    for (let ix = 0, iy = 1; ix < count; ix += 2, iy += 2) {\n      const next = ix + 2 < count ? ix + 2 : 0;\n      const x = coords[next] - coords[ix];\n      const y = coords[next + 1] - coords[iy];\n      const length = x || y ? Math.sqrt(x * x + y * y) : 0;\n\n      edges[ix] = x;\n      edges[iy] = y;\n      normals[ix] = length ? y / length : 0;\n      normals[iy] = length ? -x / length : 0;\n    }\n\n    this._dirty_normals = false;\n  }\n}\n\nmodule.exports = Polygon;\n\nmodule.exports.default = module.exports;\n\n\n//# sourceURL=webpack:///./node_modules/detect-collisions/source/modules/Polygon.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/source/modules/Result.js":
/*!*****************************************************************!*\
  !*** ./node_modules/detect-collisions/source/modules/Result.js ***!
  \*****************************************************************/
/***/ ((module) => {

eval("/**\n * An object used to collect the detailed results of a collision test\n *\n * > **Note:** It is highly recommended you recycle the same Result object if possible in order to avoid wasting memory\n * @class\n */\nclass Result {\n  /**\n   * @constructor\n   */\n  constructor() {\n    /**\n     * @desc True if a collision was detected\n     * @type {Boolean}\n     */\n    this.collision = false;\n\n    /**\n     * @desc The source body tested\n     * @type {Circle|Polygon|Point}\n     */\n    this.a = null;\n\n    /**\n     * @desc The target body tested against\n     * @type {Circle|Polygon|Point}\n     */\n    this.b = null;\n\n    /**\n     * @desc True if A is completely contained within B\n     * @type {Boolean}\n     */\n    this.a_in_b = false;\n\n    /**\n     * @desc True if B is completely contained within A\n     * @type {Boolean}\n     */\n    this.b_in_a = false;\n\n    /**\n     * @desc The magnitude of the shortest axis of overlap\n     * @type {Number}\n     */\n    this.overlap = 0;\n\n    /**\n     * @desc The X direction of the shortest axis of overlap\n     * @type {Number}\n     */\n    this.overlap_x = 0;\n\n    /**\n     * @desc The Y direction of the shortest axis of overlap\n     * @type {Number}\n     */\n    this.overlap_y = 0;\n  }\n}\n\nmodule.exports = Result;\n\nmodule.exports.default = module.exports;\n\n\n//# sourceURL=webpack:///./node_modules/detect-collisions/source/modules/Result.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/source/modules/SAT.js":
/*!**************************************************************!*\
  !*** ./node_modules/detect-collisions/source/modules/SAT.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("/**\n * Determines if two bodies are colliding using the Separating Axis Theorem\n * @private\n * @param {Circle|Polygon|Point} a The source body to test\n * @param {Circle|Polygon|Point} b The target body to test against\n * @param {Result} [result = null] A Result object on which to store information about the collision\n * @param {Boolean} [aabb = true] Set to false to skip the AABB test (useful if you use your own collision heuristic)\n * @returns {Boolean}\n */\nfunction SAT(a, b, result = null, aabb = true) {\n  const a_polygon = a._polygon;\n  const b_polygon = b._polygon;\n\n  let collision = false;\n\n  if (result) {\n    result.a = a;\n    result.b = b;\n    result.a_in_b = true;\n    result.b_in_a = true;\n    result.overlap = null;\n    result.overlap_x = 0;\n    result.overlap_y = 0;\n  }\n\n  if (a_polygon) {\n    if (\n      a._dirty_coords ||\n      a.x !== a._x ||\n      a.y !== a._y ||\n      a.angle !== a._angle ||\n      a.scale_x !== a._scale_x ||\n      a.scale_y !== a._scale_y\n    ) {\n      a._calculateCoords();\n    }\n  }\n\n  if (b_polygon) {\n    if (\n      b._dirty_coords ||\n      b.x !== b._x ||\n      b.y !== b._y ||\n      b.angle !== b._angle ||\n      b.scale_x !== b._scale_x ||\n      b.scale_y !== b._scale_y\n    ) {\n      b._calculateCoords();\n    }\n  }\n\n  if (!aabb || aabbAABB(a, b)) {\n    if (a_polygon && a._dirty_normals) {\n      a._calculateNormals();\n    }\n\n    if (b_polygon && b._dirty_normals) {\n      b._calculateNormals();\n    }\n\n    collision =\n      a_polygon && b_polygon\n        ? polygonPolygon(a, b, result)\n        : a_polygon\n        ? polygonCircle(a, b, result, false)\n        : b_polygon\n        ? polygonCircle(b, a, result, true)\n        : circleCircle(a, b, result);\n  }\n\n  if (result) {\n    result.collision = collision;\n  }\n\n  return collision;\n}\n\n/**\n * Determines if two bodies' axis aligned bounding boxes are colliding\n * @param {Circle|Polygon|Point} a The source body to test\n * @param {Circle|Polygon|Point} b The target body to test against\n */\nfunction aabbAABB(a, b) {\n  const a_polygon = a._polygon;\n  const a_x = a_polygon ? 0 : a.x;\n  const a_y = a_polygon ? 0 : a.y;\n  const a_radius = a_polygon ? 0 : a.radius * a.scale;\n  const a_min_x = a_polygon ? a._min_x : a_x - a_radius;\n  const a_min_y = a_polygon ? a._min_y : a_y - a_radius;\n  const a_max_x = a_polygon ? a._max_x : a_x + a_radius;\n  const a_max_y = a_polygon ? a._max_y : a_y + a_radius;\n\n  const b_polygon = b._polygon;\n  const b_x = b_polygon ? 0 : b.x;\n  const b_y = b_polygon ? 0 : b.y;\n  const b_radius = b_polygon ? 0 : b.radius * b.scale;\n  const b_min_x = b_polygon ? b._min_x : b_x - b_radius;\n  const b_min_y = b_polygon ? b._min_y : b_y - b_radius;\n  const b_max_x = b_polygon ? b._max_x : b_x + b_radius;\n  const b_max_y = b_polygon ? b._max_y : b_y + b_radius;\n\n  return (\n    a_min_x < b_max_x &&\n    a_min_y < b_max_y &&\n    a_max_x > b_min_x &&\n    a_max_y > b_min_y\n  );\n}\n\n/**\n * Determines if two polygons are colliding\n * @param {Polygon} a The source polygon to test\n * @param {Polygon} b The target polygon to test against\n * @param {Result} [result = null] A Result object on which to store information about the collision\n * @returns {Boolean}\n */\nfunction polygonPolygon(a, b, result = null) {\n  const a_count = a._coords.length;\n  const b_count = b._coords.length;\n\n  // Handle points specially\n  if (a_count === 2 && b_count === 2) {\n    const a_coords = a._coords;\n    const b_coords = b._coords;\n\n    if (result) {\n      result.overlap = 0;\n    }\n\n    return a_coords[0] === b_coords[0] && a_coords[1] === b_coords[1];\n  }\n\n  const a_coords = a._coords;\n  const b_coords = b._coords;\n  const a_normals = a._normals;\n  const b_normals = b._normals;\n\n  if (a_count > 2) {\n    for (let ix = 0, iy = 1; ix < a_count; ix += 2, iy += 2) {\n      if (\n        separatingAxis(a_coords, b_coords, a_normals[ix], a_normals[iy], result)\n      ) {\n        return false;\n      }\n    }\n  }\n\n  if (b_count > 2) {\n    for (let ix = 0, iy = 1; ix < b_count; ix += 2, iy += 2) {\n      if (\n        separatingAxis(a_coords, b_coords, b_normals[ix], b_normals[iy], result)\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines if a polygon and a circle are colliding\n * @param {Polygon} a The source polygon to test\n * @param {Circle} b The target circle to test against\n * @param {Result} [result = null] A Result object on which to store information about the collision\n * @param {Boolean} [reverse = false] Set to true to reverse a and b in the result parameter when testing circle->polygon instead of polygon->circle\n * @returns {Boolean}\n */\nfunction polygonCircle(a, b, result = null, reverse = false) {\n  const a_coords = a._coords;\n  const a_edges = a._edges;\n  const a_normals = a._normals;\n  const b_x = b.x;\n  const b_y = b.y;\n  const b_radius = b.radius * b.scale;\n  const b_radius2 = b_radius * 2;\n  const radius_squared = b_radius * b_radius;\n  const count = a_coords.length;\n\n  let a_in_b = true;\n  let b_in_a = true;\n  let overlap = null;\n  let overlap_x = 0;\n  let overlap_y = 0;\n\n  // Handle points specially\n  if (count === 2) {\n    const coord_x = b_x - a_coords[0];\n    const coord_y = b_y - a_coords[1];\n    const length_squared = coord_x * coord_x + coord_y * coord_y;\n\n    if (length_squared > radius_squared) {\n      return false;\n    }\n\n    if (result) {\n      const length = Math.sqrt(length_squared);\n\n      overlap = b_radius - length;\n      overlap_x = coord_x / length;\n      overlap_y = coord_y / length;\n      b_in_a = false;\n    }\n  } else {\n    for (let ix = 0, iy = 1; ix < count; ix += 2, iy += 2) {\n      const coord_x = b_x - a_coords[ix];\n      const coord_y = b_y - a_coords[iy];\n      const edge_x = a_edges[ix];\n      const edge_y = a_edges[iy];\n      const dot = coord_x * edge_x + coord_y * edge_y;\n      const region =\n        dot < 0 ? -1 : dot > edge_x * edge_x + edge_y * edge_y ? 1 : 0;\n\n      let tmp_overlapping = false;\n      let tmp_overlap = 0;\n      let tmp_overlap_x = 0;\n      let tmp_overlap_y = 0;\n\n      if (\n        result &&\n        a_in_b &&\n        coord_x * coord_x + coord_y * coord_y > radius_squared\n      ) {\n        a_in_b = false;\n      }\n\n      if (region) {\n        const left = region === -1;\n        const other_x = left\n          ? ix === 0\n            ? count - 2\n            : ix - 2\n          : ix === count - 2\n          ? 0\n          : ix + 2;\n        const other_y = other_x + 1;\n        const coord2_x = b_x - a_coords[other_x];\n        const coord2_y = b_y - a_coords[other_y];\n        const edge2_x = a_edges[other_x];\n        const edge2_y = a_edges[other_y];\n        const dot2 = coord2_x * edge2_x + coord2_y * edge2_y;\n        const region2 =\n          dot2 < 0 ? -1 : dot2 > edge2_x * edge2_x + edge2_y * edge2_y ? 1 : 0;\n\n        if (region2 === -region) {\n          const target_x = left ? coord_x : coord2_x;\n          const target_y = left ? coord_y : coord2_y;\n          const length_squared = target_x * target_x + target_y * target_y;\n\n          if (length_squared > radius_squared) {\n            return false;\n          }\n\n          if (result) {\n            const length = Math.sqrt(length_squared);\n\n            tmp_overlapping = true;\n            tmp_overlap = b_radius - length;\n            tmp_overlap_x = target_x / length;\n            tmp_overlap_y = target_y / length;\n            b_in_a = false;\n          }\n        }\n      } else {\n        const normal_x = a_normals[ix];\n        const normal_y = a_normals[iy];\n        const length = coord_x * normal_x + coord_y * normal_y;\n        const absolute_length = length < 0 ? -length : length;\n\n        if (length > 0 && absolute_length > b_radius) {\n          return false;\n        }\n\n        if (result) {\n          tmp_overlapping = true;\n          tmp_overlap = b_radius - length;\n          tmp_overlap_x = normal_x;\n          tmp_overlap_y = normal_y;\n\n          if ((b_in_a && length >= 0) || tmp_overlap < b_radius2) {\n            b_in_a = false;\n          }\n        }\n      }\n\n      if (tmp_overlapping && (overlap === null || overlap > tmp_overlap)) {\n        overlap = tmp_overlap;\n        overlap_x = tmp_overlap_x;\n        overlap_y = tmp_overlap_y;\n      }\n    }\n  }\n\n  if (result) {\n    result.a_in_b = reverse ? b_in_a : a_in_b;\n    result.b_in_a = reverse ? a_in_b : b_in_a;\n    result.overlap = overlap;\n    result.overlap_x = reverse ? -overlap_x : overlap_x;\n    result.overlap_y = reverse ? -overlap_y : overlap_y;\n  }\n\n  return true;\n}\n\n/**\n * Determines if two circles are colliding\n * @param {Circle} a The source circle to test\n * @param {Circle} b The target circle to test against\n * @param {Result} [result = null] A Result object on which to store information about the collision\n * @returns {Boolean}\n */\nfunction circleCircle(a, b, result = null) {\n  const a_radius = a.radius * a.scale;\n  const b_radius = b.radius * b.scale;\n  const difference_x = b.x - a.x;\n  const difference_y = b.y - a.y;\n  const radius_sum = a_radius + b_radius;\n  const length_squared =\n    difference_x * difference_x + difference_y * difference_y;\n\n  if (length_squared > radius_sum * radius_sum) {\n    return false;\n  }\n\n  if (result) {\n    const length = Math.sqrt(length_squared);\n\n    result.a_in_b = a_radius <= b_radius && length <= b_radius - a_radius;\n    result.b_in_a = b_radius <= a_radius && length <= a_radius - b_radius;\n    result.overlap = radius_sum - length;\n    result.overlap_x = difference_x / length;\n    result.overlap_y = difference_y / length;\n  }\n\n  return true;\n}\n\n/**\n * Determines if two polygons are separated by an axis\n * @param {Array<Number[]>} a_coords The coordinates of the polygon to test\n * @param {Array<Number[]>} b_coords The coordinates of the polygon to test against\n * @param {Number} x The X direction of the axis\n * @param {Number} y The Y direction of the axis\n * @param {Result} [result = null] A Result object on which to store information about the collision\n * @returns {Boolean}\n */\nfunction separatingAxis(a_coords, b_coords, x, y, result = null) {\n  const a_count = a_coords.length;\n  const b_count = b_coords.length;\n\n  if (!a_count || !b_count) {\n    return true;\n  }\n\n  let a_start = null;\n  let a_end = null;\n  let b_start = null;\n  let b_end = null;\n\n  for (let ix = 0, iy = 1; ix < a_count; ix += 2, iy += 2) {\n    const dot = a_coords[ix] * x + a_coords[iy] * y;\n\n    if (a_start === null || a_start > dot) {\n      a_start = dot;\n    }\n\n    if (a_end === null || a_end < dot) {\n      a_end = dot;\n    }\n  }\n\n  for (let ix = 0, iy = 1; ix < b_count; ix += 2, iy += 2) {\n    const dot = b_coords[ix] * x + b_coords[iy] * y;\n\n    if (b_start === null || b_start > dot) {\n      b_start = dot;\n    }\n\n    if (b_end === null || b_end < dot) {\n      b_end = dot;\n    }\n  }\n\n  if (a_start > b_end || a_end < b_start) {\n    return true;\n  }\n\n  if (result) {\n    let overlap = 0;\n\n    if (a_start < b_start) {\n      result.a_in_b = false;\n\n      if (a_end < b_end) {\n        overlap = a_end - b_start;\n        result.b_in_a = false;\n      } else {\n        const option1 = a_end - b_start;\n        const option2 = b_end - a_start;\n\n        overlap = option1 < option2 ? option1 : -option2;\n      }\n    } else {\n      result.b_in_a = false;\n\n      if (a_end > b_end) {\n        overlap = a_start - b_end;\n        result.a_in_b = false;\n      } else {\n        const option1 = a_end - b_start;\n        const option2 = b_end - a_start;\n\n        overlap = option1 < option2 ? option1 : -option2;\n      }\n    }\n\n    const current_overlap = result.overlap;\n    const absolute_overlap = overlap < 0 ? -overlap : overlap;\n\n    if (current_overlap === null || current_overlap > absolute_overlap) {\n      const sign = overlap < 0 ? -1 : 1;\n\n      result.overlap = absolute_overlap;\n      result.overlap_x = x * sign;\n      result.overlap_y = y * sign;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = SAT;\n\nmodule.exports.default = module.exports;\n\n\n//# sourceURL=webpack:///./node_modules/detect-collisions/source/modules/SAT.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/source/modules/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/detect-collisions/source/modules/index.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const BVH = __webpack_require__(/*! ./BVH.js */ \"./node_modules/detect-collisions/source/modules/BVH.js\");\nconst Circle = __webpack_require__(/*! ./Circle.js */ \"./node_modules/detect-collisions/source/modules/Circle.js\");\nconst Polygon = __webpack_require__(/*! ./Polygon.js */ \"./node_modules/detect-collisions/source/modules/Polygon.js\");\nconst Point = __webpack_require__(/*! ./Point.js */ \"./node_modules/detect-collisions/source/modules/Point.js\");\nconst Result = __webpack_require__(/*! ./Result.js */ \"./node_modules/detect-collisions/source/modules/Result.js\");\nconst SAT = __webpack_require__(/*! ./SAT.js */ \"./node_modules/detect-collisions/source/modules/SAT.js\");\n\nmodule.exports = {\n  BVH,\n  Circle,\n  Polygon,\n  Point,\n  Result,\n  SAT,\n};\n\n\n//# sourceURL=webpack:///./node_modules/detect-collisions/source/modules/index.js?");

/***/ }),

/***/ "./client/game/entities/ablock.ts":
/*!****************************************!*\
  !*** ./client/game/entities/ablock.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ABlock\": () => (/* binding */ ABlock)\n/* harmony export */ });\n/* harmony import */ var pixi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pixi.js */ \"pixi.js\");\n/* harmony import */ var pixi_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pixi_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_types_vector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/types/vector */ \"./lib/types/vector.ts\");\n/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../entity */ \"./client/game/entity.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar ABlock = /** @class */ (function (_super) {\n    __extends(ABlock, _super);\n    function ABlock() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.Type = \"ABlock\";\n        _this.Position = new _lib_types_vector__WEBPACK_IMPORTED_MODULE_1__.Vector(200, 200);\n        return _this;\n    }\n    ABlock.prototype.collided = function (result) {\n        this.Position.x -= result.overlap * result.overlap_x;\n        this.Position.y -= result.overlap * result.overlap_y;\n        return;\n    };\n    ABlock.prototype.getColliders = function () {\n        if (!this.CollisionBox)\n            return [];\n        return [this.CollisionBox];\n    };\n    ABlock.prototype.canMove = function () {\n        return true;\n    };\n    ABlock.prototype.initialize = function () {\n        this.MyGraphics = new pixi_js__WEBPACK_IMPORTED_MODULE_0__.Graphics();\n        this.MyGraphics.beginFill(0xFFFFFF);\n        this.MyGraphics.drawCircle(0, 0, 32);\n        this.MyGraphics.endFill();\n        this.MyGraphics.setTransform(this.Position.x, this.Position.y);\n        this.game.stage.addChild(this.MyGraphics);\n        this.CollisionBox = this.game.CollisionSystem.createCircle(this.Position.x - 32, this.Position.y - 32, 32);\n        this.CollisionBox.owner = this;\n    };\n    ABlock.prototype.update = function () {\n        this.CollisionBox.x = this.Position.x - 32;\n        this.CollisionBox.y = this.Position.y - 32;\n        this.MyGraphics.setTransform(this.Position.x, this.Position.y);\n    };\n    return ABlock;\n}(_entity__WEBPACK_IMPORTED_MODULE_2__.Entity));\n\n\n\n//# sourceURL=webpack:///./client/game/entities/ablock.ts?");

/***/ }),

/***/ "./client/game/entities/map.ts":
/*!*************************************!*\
  !*** ./client/game/entities/map.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Map\": () => (/* binding */ Map)\n/* harmony export */ });\n/* harmony import */ var pixi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pixi.js */ \"pixi.js\");\n/* harmony import */ var pixi_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pixi_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_types_vector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/types/vector */ \"./lib/types/vector.ts\");\n/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../entity */ \"./client/game/entity.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    function Map() {\n        var _this = _super.call(this) || this;\n        _this.amount = 1;\n        _this.pauseCounter = 0;\n        return _this;\n    }\n    Map.prototype.initialize = function () {\n        this.player = this.game.getEntity(\"Player\");\n        this.MyGraphics = new pixi_js__WEBPACK_IMPORTED_MODULE_0__.Graphics();\n        console.log(this.game.loader.resources);\n        for (var i = 0; i < 8; i++) {\n            for (var j = 0; j < 8; j++) {\n                var ts = new pixi_js__WEBPACK_IMPORTED_MODULE_0__.TilingSprite(this.game.loader.resources[\"rpgtileset\"].texture, 64, 64);\n                ts.tilePosition.x = -64;\n                ts.tilePosition.y = -64;\n                ts.y = 64 * i;\n                ts.x = 64 * j;\n                this.MyGraphics.addChild(ts);\n            }\n        }\n        var generatedTexture = this.game.renderer.generateTexture(this.MyGraphics);\n        this.game.stage.addChild(new pixi_js__WEBPACK_IMPORTED_MODULE_0__.Sprite(generatedTexture));\n        //this.MyGraphics.;\n        this.fpsCounter = new pixi_js__WEBPACK_IMPORTED_MODULE_0__.Text(\"\", { fontFamily: 'PressStart2P-Regular', fontSize: 8, fill: 'red' });\n        this.fpsCounter.x = 1000;\n        this.fpsCounter.y = 50;\n        this.fpsCounter.zIndex = 10;\n        this.fpsCounter.text = this.game.loader.resources[\"test\"].data;\n        this.game.gui.addChild(this.fpsCounter);\n    };\n    Map.prototype.postUpdate = function () {\n        //this.amount+=1;\n        //if(this.amount>10){\n        //    this.amount=0;\n        //    this.MyTileset3.tilePosition.y++;\n        //    this.MyTileset2.tilePosition.x--;\n        //    console.log(this.MyTileset3.tilePosition.y+\" \"+this.amount);\n        //}\n        this.fpsCounter.x = 150;\n        this.fpsCounter.y = 20;\n        this.fpsCounter.text = this.fpsCounter.y + \"\";\n    };\n    Map.prototype.visibleChunkCheck = function () {\n        //Take Player coordinate and send him all visible Chunks\n        //(circle radius of about Screen Area + 2 Chunks around that. Unloaded Chunks should just be grass.)\n        //Ideally this takes TileSize into account. (Which is currently 64)\n        var topLeft = _lib_types_vector__WEBPACK_IMPORTED_MODULE_1__.Vector.subNumber(this.player.Position, 2000);\n        var bottomRight = _lib_types_vector__WEBPACK_IMPORTED_MODULE_1__.Vector.addNumber(this.player.Position, 2000);\n    };\n    return Map;\n}(_entity__WEBPACK_IMPORTED_MODULE_2__.Entity));\n\n\n\n//# sourceURL=webpack:///./client/game/entities/map.ts?");

/***/ }),

/***/ "./client/game/entities/mouse.ts":
/*!***************************************!*\
  !*** ./client/game/entities/mouse.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Mouse\": () => (/* binding */ Mouse)\n/* harmony export */ });\n/* harmony import */ var pixi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pixi.js */ \"pixi.js\");\n/* harmony import */ var pixi_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pixi_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../entity */ \"./client/game/entity.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar Mouse = /** @class */ (function (_super) {\n    __extends(Mouse, _super);\n    function Mouse() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.Position = { x: 0, y: 0 };\n        _this.amount = 1;\n        return _this;\n    }\n    Mouse.prototype.initialize = function () {\n        var _this = this;\n        this.MyGraphics = new pixi_js__WEBPACK_IMPORTED_MODULE_0__.Graphics();\n        this.MyGraphics.beginFill(0xFFFFFF);\n        this.MyGraphics.drawRect(this.Position.x, this.Position.y, 64, 64);\n        this.MyGraphics.endFill();\n        this.MyGraphics.alpha = 0.5;\n        this.game.stage.addChild(this.MyGraphics);\n        this.tilePos = new pixi_js__WEBPACK_IMPORTED_MODULE_0__.Text(\"No Text\", { fontFamily: 'PressStart2P-Regular', fontSize: 8, fill: 'black' });\n        this.tilePos.x = 20;\n        this.tilePos.y = 20;\n        this.tilePos.zIndex = -100;\n        this.game.gui.addChild(this.tilePos);\n        this.game.stage.on(\"mousemove\", function (ev) {\n            //console.log(ev.data);\n            //console.log(ev.data.global.x+\", \"+ev.data.global.y);\n            _this.Position.x = ev.data.global.x - _this.game.stage.x;\n            _this.Position.y = ev.data.global.y - _this.game.stage.y;\n            if (_this.Position.x < 0) {\n                _this.Position.x -= 64;\n            }\n            if (_this.Position.y < 0) {\n                _this.Position.y -= 64;\n            }\n            _this.MyGraphics.x = _this.Position.x - _this.Position.x % 64;\n            _this.MyGraphics.y = _this.Position.y - _this.Position.y % 64;\n        });\n    };\n    Mouse.prototype.guiInit = function () {\n    };\n    Mouse.prototype.postUpdate = function () {\n        this.tilePos.text = \"\" + Math.floor((this.Position.x - this.Position.x % 64) / 64) + \", \" + Math.floor((this.Position.y - this.Position.y % 64) / 64);\n    };\n    Mouse.prototype.draw = function () {\n        /*this.game.context.fillStyle = \"#BB2200\";\n        this.game.context.fillRect(\n            this.Position.x + 0,\n            this.Position.y + 0,\n            50,\n            50);*/\n    };\n    return Mouse;\n}(_entity__WEBPACK_IMPORTED_MODULE_1__.Entity));\n\n\n\n//# sourceURL=webpack:///./client/game/entities/mouse.ts?");

/***/ }),

/***/ "./client/game/entities/player.ts":
/*!****************************************!*\
  !*** ./client/game/entities/player.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Player\": () => (/* binding */ Player)\n/* harmony export */ });\n/* harmony import */ var _packets_00_register__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../packets/00_register */ \"./client/packets/00_register.ts\");\n/* harmony import */ var _packets_06b_reset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../packets/06b_reset */ \"./client/packets/06b_reset.ts\");\n/* harmony import */ var _packets_01_chat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../packets/01_chat */ \"./client/packets/01_chat.ts\");\n/* harmony import */ var _packets_packet_registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../packets/packet_registry */ \"./client/packets/packet_registry.ts\");\n/* harmony import */ var _packets_01b_chatbroadcast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../packets/01b_chatbroadcast */ \"./client/packets/01b_chatbroadcast.ts\");\n/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../entity */ \"./client/game/entity.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../.. */ \"./client/index.ts\");\n/* harmony import */ var pixi_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! pixi.js */ \"pixi.js\");\n/* harmony import */ var pixi_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(pixi_js__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _lib_types_vector__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../lib/types/vector */ \"./lib/types/vector.ts\");\n/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../input */ \"./client/game/input.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n\n\n\nvar Player = /** @class */ (function (_super) {\n    __extends(Player, _super);\n    function Player() {\n        var _this = _super.call(this) || this;\n        _this.Type = \"Player\";\n        _this.Position = new _lib_types_vector__WEBPACK_IMPORTED_MODULE_8__.Vector(20, 10);\n        _this.PhisicalVector = new _lib_types_vector__WEBPACK_IMPORTED_MODULE_8__.Vector(0, 0);\n        _this.PressedKeys = new Set();\n        _this.LastCameraPositions = [];\n        _this.MedianCameraPos = new _lib_types_vector__WEBPACK_IMPORTED_MODULE_8__.Vector(0, 0);\n        _this.PollingRate = 1000;\n        _this.PollingState = 0;\n        return _this;\n    }\n    Player.prototype.collided = function (result) {\n        this.Position.x -= result.overlap / 2 * result.overlap_x;\n        this.Position.y -= result.overlap / 2 * result.overlap_y;\n        result.b.owner.x += result.overlap / 2 * result.overlap_x;\n        result.b.owner.y += result.overlap / 2 * result.overlap_y;\n    };\n    Player.prototype.getColliders = function () {\n        this.CollisionBox.x = this.Position.x;\n        this.CollisionBox.y = this.Position.y;\n        return [this.CollisionBox];\n    };\n    Player.prototype.canMove = function () {\n        return true;\n    };\n    Player.prototype.initialize = function () {\n        var _this = this;\n        this.CollisionBox = this.game.CollisionSystem.createCircle(this.Position.x, this.Position.y, 32);\n        this.CollisionBox.owner = this;\n        this.packageRegistry = new _packets_packet_registry__WEBPACK_IMPORTED_MODULE_3__.PacketRegistry();\n        this.packageRegistry.game = this.game;\n        this.packageRegistry.socket = this.game.socket;\n        this.packageRegistry.register(\"00\", new _packets_00_register__WEBPACK_IMPORTED_MODULE_0__.RegisterPacket());\n        this.packageRegistry.register(\"01\", new _packets_01_chat__WEBPACK_IMPORTED_MODULE_2__.ChatPacket());\n        this.packageRegistry.register(\"01b\", new _packets_01b_chatbroadcast__WEBPACK_IMPORTED_MODULE_4__.ChatBroadcastPacket());\n        this.packageRegistry.register(\"06b\", new _packets_06b_reset__WEBPACK_IMPORTED_MODULE_1__.ChatResetPacket());\n        this.packageRegistry.packetsRegistred.forEach(function (packet) {\n            _this.game.socket.on(packet[0], function (args) { console.log(\"REIC \" + packet[0]); packet[1].handle(args); });\n        });\n        setTimeout(function () {\n            _this.game.socket.emit(\"00\");\n            _this.game.socket.emit(\"03\");\n        }, 1000);\n        this.MyGraphics = new pixi_js__WEBPACK_IMPORTED_MODULE_7__.Graphics();\n        this.MySprite = new pixi_js__WEBPACK_IMPORTED_MODULE_7__.TilingSprite(this.game.loader.resources[\"player\"].texture, 64, 64);\n        this.MySprite.tilePosition.x = 0;\n        this.MyGraphics.addChild(this.MySprite);\n        //this.MyTexture = this.game.renderer.generateTexture(this.MyGraphics);\n        //this.MyRenderedSprite = new Sprite(this.MyTexture);\n        //this.game.stage.addChild(this.MyRenderedSprite);\n        this.game.stage.addChild(this.MyGraphics);\n        console.log(\"Added Sprite to Stage.\");\n        var ih = this.game.getEntity(\"InputHandler\");\n        this.myVisibilityChangedEventId = ih.Events.get(_input__WEBPACK_IMPORTED_MODULE_9__.EventTypesAvailable.VisibilityChanged).addListener(function () {\n            console.log(\"Vis changed!!\");\n            _this.PressedKeys.clear();\n        });\n        this.myKeyDownEventId = ih.Events.get(_input__WEBPACK_IMPORTED_MODULE_9__.EventTypesAvailable.KeyDown).addListener(function (event) {\n            if (event.defaultPrevented) {\n                return; // Do nothing if the event was already processed\n            }\n            switch (event.key) {\n                case \"Down\": // IE/Edge specific value\n                case \"ArrowDown\":\n                case \"s\":\n                    _this.PressedKeys.add(\"Down\");\n                    _this.MySprite.tilePosition.y = -64;\n                    // Do something for \"down arrow\" key press.\n                    break;\n                case \"Up\": // IE/Edge specific value\n                case \"ArrowUp\":\n                case \"w\":\n                    _this.PressedKeys.add(\"Up\");\n                    _this.MySprite.tilePosition.y = 0;\n                    // Do something for \"up arrow\" key press.\n                    break;\n                case \"Left\": // IE/Edge specific value\n                case \"ArrowLeft\":\n                case \"a\":\n                    _this.PressedKeys.add(\"Left\");\n                    _this.MySprite.tilePosition.y = -128;\n                    // Do something for \"left arrow\" key press.\n                    break;\n                case \"Right\": // IE/Edge specific value\n                case \"ArrowRight\":\n                case \"d\":\n                    _this.PressedKeys.add(\"Right\");\n                    _this.MySprite.tilePosition.y = -128 - 64;\n                    // Do something for \"right arrow\" key press.\n                    break;\n                case \"Enter\":\n                    // Do something for \"enter\" or \"return\" key press.\n                    break;\n                case \"Esc\": // IE/Edge specific value\n                case \"Escape\":\n                    // Do something for \"esc\" key press.\n                    break;\n                default:\n                    return; // Quit when this doesn't handle the key event.\n            }\n            // Cancel the default action to avoid it being handled twice\n            event.preventDefault();\n        });\n        this.myKeyUpEventId = ih.Events.get(_input__WEBPACK_IMPORTED_MODULE_9__.EventTypesAvailable.KeyUp).addListener(function (event) {\n            if (event.defaultPrevented) {\n                return; // Do nothing if the event was already processed\n            }\n            console.log(event.key);\n            switch (event.key) {\n                case \"Down\": // IE/Edge specific value\n                case \"ArrowDown\":\n                case \"s\":\n                    _this.PressedKeys.delete(\"Down\");\n                    // Do something for \"down arrow\" key press.\n                    break;\n                case \"Up\": // IE/Edge specific value\n                case \"ArrowUp\":\n                case \"w\":\n                    _this.PressedKeys.delete(\"Up\");\n                    // Do something for \"up arrow\" key press.\n                    break;\n                case \"Left\": // IE/Edge specific value\n                case \"ArrowLeft\":\n                case \"a\":\n                    _this.PressedKeys.delete(\"Left\");\n                    // Do something for \"left arrow\" key press.\n                    break;\n                case \"Right\": // IE/Edge specific value\n                case \"ArrowRight\":\n                case \"d\":\n                    _this.PressedKeys.delete(\"Right\");\n                    // Do something for \"right arrow\" key press.\n                    break;\n                case \"Enter\":\n                    // Do something for \"enter\" or \"return\" key press.\n                    break;\n                case \"Esc\": // IE/Edge specific value\n                case \"Escape\":\n                    // Do something for \"esc\" key press.\n                    break;\n                default:\n                    return; // Quit when this doesn't handle the key event.\n            }\n            // Cancel the default action to avoid it being handled twice\n            event.preventDefault();\n        });\n    };\n    Player.prototype.update = function () {\n        var anypressed = false;\n        if (this.PressedKeys.has(\"Down\")) {\n            this.PhisicalVector.y += 23 * Math.random();\n            anypressed = true;\n        }\n        if (this.PressedKeys.has(\"Up\")) {\n            this.PhisicalVector.y -= 23 * Math.random();\n            anypressed = true;\n        }\n        if (this.PressedKeys.has(\"Left\")) {\n            this.PhisicalVector.x -= 25 * Math.random();\n            anypressed = true;\n        }\n        if (this.PressedKeys.has(\"Right\")) {\n            this.PhisicalVector.x += 25 * Math.random();\n            anypressed = true;\n        }\n        if (!document.hasFocus()) {\n            this.PressedKeys.clear();\n            this.PhisicalVector.mulNumber(0.75);\n        }\n        this.Position.add(_lib_types_vector__WEBPACK_IMPORTED_MODULE_8__.Vector.mulNumber(this.PhisicalVector, 0.1));\n        this.PhisicalVector.mulNumber(0.93); //\n        if (!anypressed) {\n            this.PhisicalVector.mulNumber(0.75);\n        }\n        this.PollingState++;\n        if (this.PollingState == this.PollingRate) {\n            this.PollingState = 0;\n            ___WEBPACK_IMPORTED_MODULE_6__.socket.emit(\"04\", { uuid: this.UniqueIdentifier, position: this.Position });\n        }\n        this.MyGraphics.setTransform(this.Position.x, this.Position.y);\n        if (this.LastCameraPositions.length > 20)\n            this.LastCameraPositions.shift();\n        this.LastCameraPositions.push(new _lib_types_vector__WEBPACK_IMPORTED_MODULE_8__.Vector(-this.Position.x + this.game.renderer.width / 2 - this.MySprite.width / 2, -this.Position.y + this.game.renderer.height / 2 - this.MySprite.height / 2));\n        if (this.LastCameraPositions.length > 2) {\n            this.MedianCameraPos = this.LastCameraPositions.reduce(function (a, b) { return a.add(b); });\n            this.game.stage.x = this.MedianCameraPos.x / this.LastCameraPositions.length;\n            this.game.stage.y = this.MedianCameraPos.y / this.LastCameraPositions.length;\n        }\n        //if(this.Position.x<=0) this.remove();\n    };\n    Player.prototype.draw = function () {\n    };\n    Player.prototype.unload = function () {\n        var ih = this.game.getEntity(\"InputHandler\");\n        ih.Events.get(_input__WEBPACK_IMPORTED_MODULE_9__.EventTypesAvailable.KeyDown).removeListener(this.myKeyDownEventId);\n        ih.Events.get(_input__WEBPACK_IMPORTED_MODULE_9__.EventTypesAvailable.KeyUp).removeListener(this.myKeyUpEventId);\n        ih.Events.get(_input__WEBPACK_IMPORTED_MODULE_9__.EventTypesAvailable.VisibilityChanged).removeListener(this.myVisibilityChangedEventId);\n        this.game.stage.removeChild(this.MyGraphics);\n    };\n    return Player;\n}(_entity__WEBPACK_IMPORTED_MODULE_5__.Entity));\n\n\n\n//# sourceURL=webpack:///./client/game/entities/player.ts?");

/***/ }),

/***/ "./client/game/entity.ts":
/*!*******************************!*\
  !*** ./client/game/entity.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Entity\": () => (/* binding */ Entity)\n/* harmony export */ });\nvar Entity = /** @class */ (function () {\n    function Entity() {\n        this.Type = \"NoTypeEntity\";\n    }\n    //Initialize (only called once at game start)\n    Entity.prototype.initialize = function () { };\n    //GUI Initialize (only called once at game start) AFTER Initiazlize\n    Entity.prototype.guiInit = function () { };\n    /**\n     * Pre phisics update\n     * @param progress time since last update\n     */\n    Entity.prototype.preUpdate = function (progress) { };\n    ;\n    /**\n     * Update phisics here.\n     * @param progress time since last update\n     */\n    Entity.prototype.update = function (progress) { };\n    ;\n    /**\n     * Update GUI here so it is positioned correctly\n     * Also Collisionchecks could go here\n     * @param progress time since last update\n     */\n    Entity.prototype.postUpdate = function (progress) { };\n    ;\n    /**\n     * Dead function, will currently loop but do nothing.\n     */\n    Entity.prototype.draw = function () { };\n    ;\n    /**\n     * Unload event listeners and graphics.\n     */\n    Entity.prototype.unload = function () { };\n    ;\n    Entity.prototype.remove = function () {\n        this.game.removeEntity(this);\n    };\n    ;\n    return Entity;\n}());\n\n\n\n//# sourceURL=webpack:///./client/game/entity.ts?");

/***/ }),

/***/ "./client/game/game.ts":
/*!*****************************!*\
  !*** ./client/game/game.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Game\": () => (/* binding */ Game)\n/* harmony export */ });\n/* harmony import */ var detect_collisions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! detect-collisions */ \"./node_modules/detect-collisions/source/index.js\");\n/* harmony import */ var detect_collisions__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(detect_collisions__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_typeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/typeCheck */ \"./lib/typeCheck.ts\");\n/* harmony import */ var pixi_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pixi.js */ \"pixi.js\");\n/* harmony import */ var pixi_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(pixi_js__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nvar Game = /** @class */ (function () {\n    function Game() {\n        this.lastRender = 0;\n        this.entities = [];\n        //SYSTEMS\n        this.CollisionSystem = new detect_collisions__WEBPACK_IMPORTED_MODULE_0__.Collisions();\n        this.globalOffset = [0, 0];\n        this.loader = pixi_js__WEBPACK_IMPORTED_MODULE_2__.Loader.shared;\n        this.resources = pixi_js__WEBPACK_IMPORTED_MODULE_2__.Loader.shared.resources;\n        this.fpsMedian = [];\n        this.movableEntities = [];\n    }\n    Game.prototype.start = function (socket) {\n        //this.canvas = document.querySelector<HTMLCanvasElement>('#gameCanvas'),\n        //this.context = this.canvas.getContext('2d');\n        var _this = this;\n        this.renderer = pixi_js__WEBPACK_IMPORTED_MODULE_2__.autoDetectRenderer({ antialias: false, backgroundColor: 0x1099bb });\n        pixi_js__WEBPACK_IMPORTED_MODULE_2__.settings.SCALE_MODE = pixi_js__WEBPACK_IMPORTED_MODULE_2__.SCALE_MODES.NEAREST;\n        document.body.appendChild(this.renderer.view);\n        this.stage = new pixi_js__WEBPACK_IMPORTED_MODULE_2__.Container();\n        this.stage.interactive = true;\n        this.gui = new pixi_js__WEBPACK_IMPORTED_MODULE_2__.Container();\n        this.gui.interactive = true;\n        // resize the canvas to fill browser window dynamically\n        window.addEventListener('resize', function () { _this.resizeCanvas(); }, false);\n        //window.requestAnimationFrame((ts)=>{this.loop(ts)});\n        this.socket = socket;\n        this.loader\n            .add('PressStart2P-Regular', \"sprite/PressStart2P-Regular.ttf\")\n            .add(\"player\", \"sprite/player-v1.png\")\n            .add(\"rpgtileset\", \"sprite/RPGpack_sheet.png\")\n            .add(\"test\", \"sprite/test.txt\")\n            .load();\n        this.loader.onComplete.add(function () {\n            //console.log(\"Loaded all resources.. [ \"+ this.loader. +\" ]\")\n            _this.initialize();\n        });\n        //this.startDraw();\n    };\n    Game.prototype.initialize = function () {\n        var _this = this;\n        console.log(\"Initializing..\");\n        this.resizeCanvas();\n        this.baseContainer = new pixi_js__WEBPACK_IMPORTED_MODULE_2__.Container();\n        this.baseContainer.addChild(this.stage, this.gui);\n        console.log(this);\n        setInterval(function () {\n            _this.loop(0);\n        }, 1000 / 60);\n        var ticker = pixi_js__WEBPACK_IMPORTED_MODULE_2__.Ticker.shared;\n        ticker.stop();\n        ticker.speed = 3;\n        ticker.maxFPS = 0;\n        // Set this to prevent starting this ticker when listeners are added.\n        // By default this is true only for the PIXI.Ticker.shared instance.\n        ticker.autoStart = false;\n        // FYI, call this to ensure the ticker is stopped. It should be stopped\n        // if you have not attempted to render anything yet.\n        // Call this when you are ready for a running shared ticker.\n        ticker.start();\n        ticker.add(function (time) {\n            // THIS IS HE REAL GAME LOOP!!\n            // LOOK HERE\n            _this.fpsMedian.push(ticker.FPS);\n            if (_this.fpsMedian.length > 100)\n                _this.fpsMedian.shift();\n            _this.fpsCounter.text = (_this.fpsMedian.reduce(function (a, y) { return (a + y); }) / _this.fpsMedian.length).toPrecision(4) + \"(\" + _this.fpsMedian.length + \")\\n\" + _this.entities.length;\n            _this.fpsCounter.x = -_this.stage.x + 550;\n            _this.fpsCounter.y = -_this.stage.y + 20;\n            // Lock GUI to Stage(camera)\n            _this.gui.x = 0;\n            _this.gui.y = 0;\n            _this.renderer.render(_this.baseContainer);\n        });\n        // Initialize\n        for (var i = 0; i < this.entities.length; i++) {\n            this.entities[i].initialize();\n        }\n        this.fpsCounter = new pixi_js__WEBPACK_IMPORTED_MODULE_2__.Text(\"No Text\", { fontFamily: 'PressStart2P-Regular', fontSize: 8, fill: 'black' });\n        this.fpsCounter.x = 920;\n        this.fpsCounter.y = 10;\n        this.stage.addChild(this.fpsCounter);\n        this.initialized = true;\n        console.log(\"Initialized\");\n        this.registerCollisionObjects();\n    };\n    Game.prototype.update = function (progress) {\n        // Update the state of the world for the elapsed time since last render\n        for (var i = 0; i < this.entities.length; i++) {\n            this.entities[i].update(progress);\n        }\n    };\n    Game.prototype.preUpdate = function (progress) {\n        // Update the state of the world for the elapsed time since last render\n        for (var i = 0; i < this.entities.length; i++) {\n            this.entities[i].preUpdate(progress);\n        }\n    };\n    Game.prototype.postUpdate = function (progress) {\n        // Update the state of the world for the elapsed time since last render\n        for (var i = 0; i < this.entities.length; i++) {\n            this.entities[i].postUpdate(progress);\n        }\n    };\n    Game.prototype.startDraw = function () {\n        var _this = this;\n        requestAnimationFrame(function () { return _this.startDraw(); });\n        this.renderer.render(this.stage);\n    };\n    Game.prototype.registerCollisionObjects = function () {\n        // Draw the state of the world\n        for (var i = 0; i < this.entities.length; i++) {\n            var ent = this.entities[i];\n            if (_lib_typeCheck__WEBPACK_IMPORTED_MODULE_1__.TypeCheck.isCollidable(ent)) {\n                this.movableEntities.push(ent);\n                console.log(\"Added \" + ent.Type);\n            }\n        }\n    };\n    Game.prototype.handleCollisions = function () {\n        var result = this.CollisionSystem.createResult();\n        for (var i = 0; i < this.movableEntities.length; i++) {\n            var movableEntity = this.movableEntities[i];\n            for (var j = 0; j < movableEntity.getColliders().length; j++) {\n                var body = movableEntity.getColliders()[j];\n                var potentials = body.potentials();\n                for (var _i = 0, potentials_1 = potentials; _i < potentials_1.length; _i++) {\n                    var other = potentials_1[_i];\n                    if (body.collides(other, result)) {\n                        movableEntity.collided(result);\n                    }\n                }\n            }\n        }\n    };\n    Game.prototype.loop = function (timestamp) {\n        var progress = timestamp - this.lastRender;\n        this.preUpdate(progress);\n        this.update(progress);\n        this.postUpdate(progress);\n        this.CollisionSystem.update();\n        this.handleCollisions();\n        this.lastRender = timestamp;\n        //window.requestAnimationFrame((ts)=>{this.loop(ts)}); \n    };\n    Game.prototype.add = function (entity) {\n        entity.game = this;\n        entity.UniqueIdentifier = \"\" + [0, 1, 2, 3, 4, 5, 6, 7, 8, 9][Math.floor(Math.random() * 10)] +\n            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9][Math.floor(Math.random() * 10)] +\n            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9][Math.floor(Math.random() * 10)] +\n            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9][Math.floor(Math.random() * 10)];\n        this.entities.push(entity);\n        if (this.initialized)\n            entity.initialize();\n    };\n    Game.prototype.getEntity = function (type) {\n        return this.entities.find(function (e) { return e.Type == type; });\n    };\n    Game.prototype.getEntities = function (type) {\n        return this.entities.filter(function (e) { return e.Type == type; });\n    };\n    Game.prototype.removeEntity = function (entity) {\n        entity.unload();\n        this.entities = this.entities.filter(function (e) { return e != entity; });\n    };\n    Game.prototype.resizeCanvas = function () {\n        //this.canvas.width = window.innerWidth;\n        //this.canvas.height = window.innerHeight;\n        this.gameWidth = window.innerWidth;\n        this.gameHeight = window.innerHeight;\n        /**\n         * Your drawings need to be inside this function otherwise they will be reset when\n         * you resize the browser window and the canvas goes will be cleared.\n         */\n        this.renderer.resize(this.gameWidth / 2, this.gameHeight / 2);\n        //this.draw(); \n        console.log(\"Resized.\");\n    };\n    return Game;\n}());\n\n\n\n//# sourceURL=webpack:///./client/game/game.ts?");

/***/ }),

/***/ "./client/game/input.ts":
/*!******************************!*\
  !*** ./client/game/input.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"InputHandler\": () => (/* binding */ InputHandler),\n/* harmony export */   \"EventTypesAvailable\": () => (/* binding */ EventTypesAvailable)\n/* harmony export */ });\n/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./entity */ \"./client/game/entity.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/**\n * Streamline JavaScript Events so many Entities can listen to them and also unregister them at any time.\n */\nvar InputHandler = /** @class */ (function (_super) {\n    __extends(InputHandler, _super);\n    function InputHandler() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.Type = \"InputHandler\";\n        _this.PressedKeys = new Set();\n        _this.Events = new Map([\n            [EventTypesAvailable.KeyUp, new IndexableEventListener(\"keyup\")],\n            [EventTypesAvailable.KeyDown, new IndexableEventListener(\"keydown\")],\n            [EventTypesAvailable.VisibilityChanged, new IndexableEventListener(\"visibilitychange\")]\n        ]);\n        return _this;\n    }\n    // Register all events here to route them to a single source.\n    InputHandler.prototype.initialize = function () {\n        var _this = this;\n        this.Events.get(EventTypesAvailable.KeyUp).addListener(function (event) {\n            _this.PressedKeys.add(event.key);\n        });\n        this.Events.get(EventTypesAvailable.KeyDown).addListener(function (event) {\n            _this.PressedKeys.delete(event.key);\n        });\n        this.Events.get(EventTypesAvailable.VisibilityChanged).addListener(function (event) {\n            _this.PressedKeys.clear();\n        });\n    };\n    return InputHandler;\n}(_entity__WEBPACK_IMPORTED_MODULE_0__.Entity));\n\nvar EventTypesAvailable;\n(function (EventTypesAvailable) {\n    EventTypesAvailable[\"KeyUp\"] = \"keyup\";\n    EventTypesAvailable[\"KeyDown\"] = \"keydown\";\n    EventTypesAvailable[\"VisibilityChanged\"] = \"visibilitychange\";\n})(EventTypesAvailable || (EventTypesAvailable = {}));\nvar IndexableEventListener = /** @class */ (function () {\n    function IndexableEventListener(eventname) {\n        var _this = this;\n        this.forwardRunningId = 0;\n        this.listeners = new Map();\n        window.addEventListener(eventname, function (event) {\n            if (event.defaultPrevented) {\n                return; // Do nothing if the event was already processed\n            }\n            _this.listeners.forEach(function (listener) {\n                listener(event);\n            });\n            // Cancel the default action to avoid it being handled twice\n            //event.preventDefault();\n        }, true);\n    }\n    /**\n     * Register a function to be called.\n     * @param func A function to be  called when window triggers an event.\n     * @returns A uid to unregister this listener.\n     */\n    IndexableEventListener.prototype.addListener = function (func) {\n        this.listeners.set(++this.forwardRunningId, func);\n        return this.forwardRunningId;\n    };\n    /**\n     * Remove a listener.\n     * @param idOfListener\n     */\n    IndexableEventListener.prototype.removeListener = function (idOfListener) {\n        this.listeners.delete(idOfListener);\n    };\n    return IndexableEventListener;\n}());\n\n\n//# sourceURL=webpack:///./client/game/input.ts?");

/***/ }),

/***/ "./client/index.ts":
/*!*************************!*\
  !*** ./client/index.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"socket\": () => (/* binding */ socket),\n/* harmony export */   \"game\": () => (/* binding */ game)\n/* harmony export */ });\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io-client */ \"socket.io-client\");\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(socket_io_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_types_vector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/types/vector */ \"./lib/types/vector.ts\");\n/* harmony import */ var _game_entities_ablock__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./game/entities/ablock */ \"./client/game/entities/ablock.ts\");\n/* harmony import */ var _game_entities_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./game/entities/map */ \"./client/game/entities/map.ts\");\n/* harmony import */ var _game_entities_mouse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./game/entities/mouse */ \"./client/game/entities/mouse.ts\");\n/* harmony import */ var _game_entities_player__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./game/entities/player */ \"./client/game/entities/player.ts\");\n/* harmony import */ var _game_game__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./game/game */ \"./client/game/game.ts\");\n/* harmony import */ var _game_input__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./game/input */ \"./client/game/input.ts\");\n\n\n\n\n\n//import { AdminGUI } from \"./gui/admin\";\n\n//import { Chat } from \"./wrappers/chat\";\n\n\nconsole.log(\"Game Server.. \");\n//export let socket = io(\"https://sayore.de/\",{\nvar socket = (0,socket_io_client__WEBPACK_IMPORTED_MODULE_0__.io)(\"https://sayore.de/\", {\n    secure: true,\n    query: {\n        x: \"42\",\n        requestedUUID: localStorage.getItem('uuid') || undefined\n    }\n});\nvar game = new _game_game__WEBPACK_IMPORTED_MODULE_6__.Game();\n//game.add(new Player());\ngame.add(new _game_input__WEBPACK_IMPORTED_MODULE_7__.InputHandler());\ngame.add(new _game_entities_map__WEBPACK_IMPORTED_MODULE_3__.Map());\ngame.add(new _game_entities_mouse__WEBPACK_IMPORTED_MODULE_4__.Mouse());\ngame.add(new _game_entities_player__WEBPACK_IMPORTED_MODULE_5__.Player());\nfor (var i = 0; i < 100; i++) {\n    //const element = array[i];\n    var newBlock = new _game_entities_ablock__WEBPACK_IMPORTED_MODULE_2__.ABlock();\n    newBlock.Position = new _lib_types_vector__WEBPACK_IMPORTED_MODULE_1__.Vector(Math.random() * 1000, Math.random() * 1000);\n    game.add(newBlock);\n}\ngame.start(socket);\n//setInterval(()=>{\n//  game.add(new ABlock([Math.random()*1000, Math.random()*500+100]));\n//  game.add(new ABlock([Math.random()*1000, Math.random()*500+100]));\n//},30)\n//export let chat = new Chat();\n//export let admingui = new AdminGUI();\n//admingui.create();\nsetInterval(function () {\n    console.log(socket.active);\n}, 1000);\n\n\n//# sourceURL=webpack:///./client/index.ts?");

/***/ }),

/***/ "./client/packets/00_register.ts":
/*!***************************************!*\
  !*** ./client/packets/00_register.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RegisterPacket\": () => (/* binding */ RegisterPacket)\n/* harmony export */ });\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"./client/packets/base.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar RegisterPacket = /** @class */ (function (_super) {\n    __extends(RegisterPacket, _super);\n    function RegisterPacket() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RegisterPacket.prototype.handle = function (args) {\n        // Received a registration request\n        console.log(\"Working Packet 00: \" + JSON.stringify(args));\n        //console.log(this);\n        if (!!args.uni) {\n            this.game.entities.find(function (m) { return m.Type == \"Player\"; }).uuid = args.uuid;\n            console.log(\"Players uuid has been set to: \" + args.uuid);\n            localStorage.setItem('uuid', args.uni);\n        }\n    };\n    return RegisterPacket;\n}(_base__WEBPACK_IMPORTED_MODULE_0__.BasePacket));\n\n\n\n//# sourceURL=webpack:///./client/packets/00_register.ts?");

/***/ }),

/***/ "./client/packets/01_chat.ts":
/*!***********************************!*\
  !*** ./client/packets/01_chat.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ChatPacket\": () => (/* binding */ ChatPacket)\n/* harmony export */ });\n/* harmony import */ var _wrappers_chat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../wrappers/chat */ \"./client/wrappers/chat.ts\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ \"./client/packets/base.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar ChatPacket = /** @class */ (function (_super) {\n    __extends(ChatPacket, _super);\n    function ChatPacket() {\n        var _this = _super.call(this) || this;\n        console.log(\"constructed chat packet\");\n        return _this;\n    }\n    // Loading Chat messages, this will be received if the client sends a 05.\n    ChatPacket.prototype.handle = function (args) {\n        console.log(\"01:\", args);\n        if (Array.isArray(args)) {\n            args.forEach(function (str) {\n                _wrappers_chat__WEBPACK_IMPORTED_MODULE_0__.Chat.addmessage(str);\n            });\n        }\n        console.log(args);\n    };\n    ChatPacket.prototype.send = function (socket, message) {\n    };\n    return ChatPacket;\n}(_base__WEBPACK_IMPORTED_MODULE_1__.BasePacket));\n\n\n\n//# sourceURL=webpack:///./client/packets/01_chat.ts?");

/***/ }),

/***/ "./client/packets/01b_chatbroadcast.ts":
/*!*********************************************!*\
  !*** ./client/packets/01b_chatbroadcast.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ChatBroadcastPacket\": () => (/* binding */ ChatBroadcastPacket)\n/* harmony export */ });\n/* harmony import */ var _wrappers_chat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../wrappers/chat */ \"./client/wrappers/chat.ts\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ \"./client/packets/base.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar ChatBroadcastPacket = /** @class */ (function (_super) {\n    __extends(ChatBroadcastPacket, _super);\n    function ChatBroadcastPacket() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // Will be received on every message send into chat!\n    ChatBroadcastPacket.prototype.handle = function (args) {\n        console.log(\"01b:\", args.msg);\n        _wrappers_chat__WEBPACK_IMPORTED_MODULE_0__.Chat.addmessage(args.msg);\n    };\n    ChatBroadcastPacket.prototype.send = function (socket, message) {\n    };\n    return ChatBroadcastPacket;\n}(_base__WEBPACK_IMPORTED_MODULE_1__.BasePacket));\n\n\n\n//# sourceURL=webpack:///./client/packets/01b_chatbroadcast.ts?");

/***/ }),

/***/ "./client/packets/06b_reset.ts":
/*!*************************************!*\
  !*** ./client/packets/06b_reset.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ChatResetPacket\": () => (/* binding */ ChatResetPacket)\n/* harmony export */ });\n/* harmony import */ var _wrappers_chat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../wrappers/chat */ \"./client/wrappers/chat.ts\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ \"./client/packets/base.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar ChatResetPacket = /** @class */ (function (_super) {\n    __extends(ChatResetPacket, _super);\n    function ChatResetPacket() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // Will be received on every message send into chat!\n    ChatResetPacket.prototype.handle = function (args) {\n        _wrappers_chat__WEBPACK_IMPORTED_MODULE_0__.Chat.clear();\n    };\n    ChatResetPacket.prototype.send = function (socket, message) {\n    };\n    return ChatResetPacket;\n}(_base__WEBPACK_IMPORTED_MODULE_1__.BasePacket));\n\n\n\n//# sourceURL=webpack:///./client/packets/06b_reset.ts?");

/***/ }),

/***/ "./client/packets/base.ts":
/*!********************************!*\
  !*** ./client/packets/base.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BasePacket\": () => (/* binding */ BasePacket)\n/* harmony export */ });\nvar BasePacket = /** @class */ (function () {\n    function BasePacket() {\n    }\n    BasePacket.prototype.handle = function (obj) {\n    };\n    return BasePacket;\n}());\n\n\n\n//# sourceURL=webpack:///./client/packets/base.ts?");

/***/ }),

/***/ "./client/packets/packet_registry.ts":
/*!*******************************************!*\
  !*** ./client/packets/packet_registry.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PacketRegistry\": () => (/* binding */ PacketRegistry)\n/* harmony export */ });\nvar PacketRegistry = /** @class */ (function () {\n    function PacketRegistry() {\n        this.packetsRegistred = [];\n    }\n    PacketRegistry.prototype.register = function (name, packet) {\n        console.log(\"Registred \", name, \" Packet\", packet);\n        packet.game = this.game;\n        if (!this.game) {\n            console.log(\"Game ist im packet registry nicht definiert. Dieses Object ist eine Kollektion des Player structs. Bitte stattdessen ein Player Object erstellen.\");\n        }\n        this.packetsRegistred.push([name, packet]);\n    };\n    return PacketRegistry;\n}());\n\n\n\n//# sourceURL=webpack:///./client/packets/packet_registry.ts?");

/***/ }),

/***/ "./client/wrappers/chat.ts":
/*!*********************************!*\
  !*** ./client/wrappers/chat.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Chat\": () => (/* binding */ Chat)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! .. */ \"./client/index.ts\");\n\nvar Chat = /** @class */ (function () {\n    function Chat() {\n        console.log(\"Chat is being initialized\");\n        document.querySelector('#sendText').addEventListener('keydown', function (ev) {\n            console.log(ev);\n            if (ev.keyCode === 13) {\n                if (!ev.shiftKey) {\n                    ev.preventDefault();\n                    ___WEBPACK_IMPORTED_MODULE_0__.socket.emit('01', { msg: document.querySelector('#sendText').value });\n                    document.querySelector('#sendText').value = \"\";\n                }\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    Chat.clear = function () {\n        var chatgui = document.querySelector('#chat');\n        chatgui.innerHTML = \"\";\n    };\n    Chat.addmessage = function (str) {\n        if (typeof (str) != \"string\") {\n            console.log(\"chat.addmessage has received a non-string value(an \" + typeof (str) + \") and will abort. (\" + JSON.stringify(str) + \")\");\n            return;\n        }\n        var chatgui = document.querySelector('#chat');\n        var chatmsg = document.createElement('div');\n        chatmsg.classList.add(\"chatmsg\");\n        //chatmsg.addEventListener('click',el.action);\n        // Remove all new lines except for the first 2\n        var spl = str.split('\\n');\n        var out = spl[0] + '\\n' + (spl[1] || \"\") + (!!spl[1] ? '\\n' : \"\");\n        spl = spl.slice(2);\n        out += spl.join();\n        chatmsg.innerText = out;\n        chatmsg.setAttribute('alt', str);\n        chatgui.appendChild(chatmsg);\n        if (chatgui.children.length > 20) {\n            chatgui.removeChild(chatgui.firstChild);\n        }\n        chatgui.scrollTop = chatgui.scrollHeight;\n    };\n    Chat.addmessages = function (strarr) {\n        var chatgui = document.querySelector('#chat');\n        strarr.forEach(function (str) {\n            var chatmsg = document.createElement('div');\n            chatmsg.classList.add(\"chatmsg\");\n            //chatmsg.addEventListener('click',el.action);\n            // Remove all new lines except for the first 2\n            var spl = str.split('\\n');\n            var out = spl[0] + '\\n' + (spl[1] || \"\") + (!!spl[1] ? '\\n' : \"\");\n            spl = spl.slice(2);\n            out += spl.join();\n            chatmsg.innerText = out;\n            chatmsg.setAttribute('alt', str);\n            chatgui.appendChild(chatmsg);\n            if (chatgui.children.length > 20) {\n                chatgui.removeChild(chatgui.firstChild);\n            }\n        });\n        chatgui.scrollTop = chatgui.scrollHeight;\n    };\n    return Chat;\n}());\n\n\n\n//# sourceURL=webpack:///./client/wrappers/chat.ts?");

/***/ }),

/***/ "./lib/typeCheck.ts":
/*!**************************!*\
  !*** ./lib/typeCheck.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TypeCheck\": () => (/* binding */ TypeCheck)\n/* harmony export */ });\nvar TypeCheck = /** @class */ (function () {\n    function TypeCheck() {\n    }\n    TypeCheck.isCollidable = function (obj) {\n        return obj.getColliders !== undefined;\n    };\n    TypeCheck.isDrawable = function (obj) {\n        return obj.Position !== undefined;\n    };\n    return TypeCheck;\n}());\n\n\n\n//# sourceURL=webpack:///./lib/typeCheck.ts?");

/***/ }),

/***/ "./lib/types/vector.ts":
/*!*****************************!*\
  !*** ./lib/types/vector.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Vector\": () => (/* binding */ Vector)\n/* harmony export */ });\nvar Vector = /** @class */ (function () {\n    function Vector(x, y) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        this.x = x;\n        this.y = y;\n    }\n    Vector.add = function (a, b) {\n        return new Vector(a.x + b.x, a.y + b.y);\n    };\n    Vector.sub = function (a, b) {\n        return new Vector(a.x - b.x, a.y - b.y);\n    };\n    Vector.mul = function (a, b) {\n        return new Vector(a.x * b.x, a.y * b.y);\n    };\n    Vector.div = function (a, b) {\n        return new Vector(a.x / b.x, a.y / b.y);\n    };\n    Vector.addNumber = function (a, b) {\n        return new Vector(a.x + b, a.y + b);\n    };\n    Vector.subNumber = function (a, b) {\n        return new Vector(a.x - b, a.y - b);\n    };\n    Vector.mulNumber = function (a, b) {\n        return new Vector(a.x * b, a.y * b);\n    };\n    Vector.divNumber = function (a, b) {\n        return new Vector(a.x / b, a.y / b);\n    };\n    Vector.prototype.add = function (a) {\n        this.x = this.x + a.x;\n        this.y = this.y + a.y;\n        return this;\n    };\n    Vector.prototype.addNumber = function (a) {\n        this.x = this.x + a;\n        this.y = this.y + a;\n        return this;\n    };\n    Vector.prototype.mul = function (a) {\n        this.x = this.x * a.x;\n        this.y = this.y * a.y;\n        return this;\n    };\n    Vector.prototype.mulNumber = function (a) {\n        this.x = this.x * a;\n        this.y = this.y * a;\n        return this;\n    };\n    Vector.prototype.sub = function (a) {\n        this.x = this.x - a.x;\n        this.y = this.y - a.y;\n        return this;\n    };\n    Vector.prototype.subNumber = function (a) {\n        this.x = this.x - a;\n        this.y = this.y - a;\n        return this;\n    };\n    Vector.prototype.div = function (a) {\n        this.x = this.x / a.x;\n        this.y = this.y / a.y;\n        return this;\n    };\n    Vector.prototype.divNumber = function (a) {\n        this.x = this.x / a;\n        this.y = this.y / a;\n        return this;\n    };\n    return Vector;\n}());\n\n\n\n//# sourceURL=webpack:///./lib/types/vector.ts?");

/***/ }),

/***/ "pixi.js":
/*!***********************!*\
  !*** external "PIXI" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = PIXI;

/***/ }),

/***/ "socket.io-client":
/*!*********************!*\
  !*** external "io" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = io;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./client/index.ts");
/******/ 	
/******/ })()
;